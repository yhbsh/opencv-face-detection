#!/usr/bin/python3


import cv2
from matplotlib import pyplot as plt
import numpy as np

# Load the image from file
file_path = 'in.jpg'  # Replace with your image file path
image = cv2.imread(file_path)

# Convert the image to gray scale
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Load the pre-trained Haar cascade for face detection
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Perform face detection
faces = face_cascade.detectMultiScale(gray, 1.1, 4)

# Draw rectangles around the faces
for (x, y, w, h) in faces:
    cv2.rectangle(image, (x, y), (x+w, y+h), (255, 0, 0), 2)

# Save the new image with rectangles
output_path = 'out.jpg'  # Replace with your desired output file path
cv2.imwrite(output_path, image)

# If you want to display the image in a Python script, you can use:
# cv2.imshow('Image with Face Detected', image)
# cv2.waitKey(0)
# cv2.destroyAllWindows()

# Note: The above display code with cv2.imshow is for use in a local environment.
# It will not work in a Jupyter notebook or similar environments where plt.show() is used for display.

